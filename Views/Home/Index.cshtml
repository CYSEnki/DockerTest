<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <title>字元飛向定位並旋轉</title>
    <style>
        body {
            margin: 0;
            overflow: hidden;
            background: #f0f0f0;
            height: 100vh;
            font-family: sans-serif;
        }

        .container-fluid {
            position: relative;
            width: 100%;
            height: 100%;
        }

        #dancetext {
            font-size: 32px;
            font-weight: bold;
            visibility: hidden; /* 隱藏原本的 label，只作為定位參考 */
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
        }

        .char {
            position: absolute;
            font-size: 32px;
            font-weight: bold;
            transition: all 5s linear;
            display: inline-block;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <label id="dancetext">婷郁是我寶貝</label>
    </div>

    <script>
        const label = document.getElementById('dancetext');
        const container = document.querySelector('.container-fluid');
        const text = label.textContent;
        const chars = [];
        const originalPositions = [];
        const randomRotations = [];

        const labelRect = label.getBoundingClientRect();

        // 建立每個字元 span 並加上初始隨機位置與角度
        for (let i = 0; i < text.length; i++) {
            const span = document.createElement('span');
            span.className = 'char';
            span.textContent = text[i];
            container.appendChild(span);
            chars.push(span);

            // 初始隨機位置
            const randX = Math.random() * window.innerWidth;
            const randY = Math.random() * window.innerHeight;

            // 初始隨機旋轉角度（-180 ~ +180 度）
            const randDeg = Math.floor(Math.random() * 360) - 180;
            randomRotations.push(randDeg);

            span.style.left = `${randX}px`;
            span.style.top = `${randY}px`;
            span.style.transform = `rotate(${randDeg}deg)`;
        }

        function computeTargetPositions() {
            const centerX = labelRect.left + labelRect.width / 2;
            const centerY = labelRect.top + labelRect.height / 2;
            const spacing = 32;

            const startX = centerX - (text.length * spacing) / 2;

            for (let i = 0; i < text.length; i++) {
                originalPositions.push({
                    left: startX + i * spacing,
                    top: centerY
                });
            }
        }

        function animateToLabel() {
            chars.forEach((char, i) => {
                const target = originalPositions[i];
                char.style.left = `${target.left}px`;
                char.style.top = `${target.top}px`;
                char.style.transform = `rotate(0deg)`; // 回正
            });
        }

        window.onload = () => {
            computeTargetPositions();
            setTimeout(animateToLabel, 500); // 半秒後啟動動畫
        };
    </script>
</body>
</html>
